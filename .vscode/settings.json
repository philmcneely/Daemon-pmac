{
    "chat.tools.autoApprove": true,
    "chat.agent.maxRequests": 50,
    "github.copilot.advanced": {
        "debug.overrideEngine": "copilot-chat",
        "debug.testOverrideProxyUrl": "",
        "debug.overrideLogLevels": {
            "*": "ERROR"
        }
    },
    "github.copilot.editor.enableAutoCompletions": true,
    "github.copilot.enable": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false,
        "log": false,
        "json": false,
        "csv": false,
        "txt": false
    },
    "github.copilot.chat.welcomeMessage": "ü§ñ CRITICAL COPILOT RULES (MANDATORY):\n\n‚ö†Ô∏è DEVELOPMENT WORKFLOW:\n‚Ä¢ ALWAYS update tests when changing functionality\n‚Ä¢ ALWAYS run tests and ensure they pass before proceeding\n‚Ä¢ ALWAYS update API_REQUIREMENTS.md when changing API behavior\n‚Ä¢ ALWAYS update E2E_TEST_CASES_GIVEN_WHEN_THEN.md for new test scenarios\n‚Ä¢ ALWAYS update OpenAPI documentation for endpoint changes\n‚Ä¢ NEVER move to next task until all tests pass and docs updated\n\n‚ö†Ô∏è COMMAND OUTPUT HANDLING:\n‚Ä¢ ALWAYS pipe GitHub CLI (gh) commands to files in gh_temp/ first, then read file\n‚Ä¢ ALWAYS pipe curl commands to files in gh_temp/ first, then read file\n‚Ä¢ NEVER try to read CLI output directly from terminal\n\n‚ö†Ô∏è FILE MANAGEMENT:\n‚Ä¢ NEVER create extraneous files for one-offs in root directory\n‚Ä¢ NEVER create duplicate files and leave them around\n‚Ä¢ ALWAYS clean up temporary files after use\n‚Ä¢ ALWAYS use gh_temp/ directory for temporary files\n\n‚ö†Ô∏è PYTHON PROJECT SPECIFICS:\n‚Ä¢ Use SQLite with aiosqlite (NOT PostgreSQL)\n‚Ä¢ Use pip with requirements.txt (NOT Poetry)\n‚Ä¢ Add detailed headers to .py files, keep .md files clean\n‚Ä¢ Follow FastAPI + SQLAlchemy async patterns\n\n‚ö†Ô∏è QUALITY GATES (ALL MUST PASS):\n‚úÖ All existing tests must pass\n‚úÖ New tests must pass\n‚úÖ Documentation updated and accurate\n‚úÖ OpenAPI schema current\n‚úÖ No temporary files in project root",
    "github.copilot.chat.instructions": "CRITICAL: Follow all development workflow rules in README.md. Always pipe gh and curl commands to gh_temp/ files first. Never skip tests or documentation updates. Use SQLite+aiosqlite (NOT PostgreSQL), pip (NOT Poetry). Add headers to .py files only.",
    "python.defaultInterpreterPath": "/Users/philmcneely/git/Daemon-pmac/venv/bin/python",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoSearchPaths": false,
    "python.analysis.indexing": true,
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.completeFunctionParens": false,
    "python.analysis.extraPaths": [],
    "python.analysis.packageIndexDepths": [
        {
            "name": "",
            "depth": 1,
            "includeAllSymbols": false
        }
    ],
    "python.analysis.stubPath": "",
    "python.analysis.userFileIndexingLimit": 2000,
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.include": ["app/**", "tests/**"],
    "python.analysis.exclude": ["venv/**", "**/__pycache__/**", ".pytest_cache/**", "htmlcov/**", "logs/**", "backups/**", "gh_temp/**"],
    "python.languageServer": "Pylance",
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": false,
    "python.linting.banditEnabled": false,
    "python.terminal.activateEnvironment": false,
    "typescript.disableAutomaticTypeAcquisition": true,
    "typescript.suggest.autoImports": false,
    "typescript.preferences.includePackageJsonAutoImports": "off",
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.startupEditor": "none",
    "workbench.settings.enableNaturalLanguageSearch": false,
    "search.followSymlinks": false,
    "search.maxResults": 2000,
    "editor.semanticHighlighting.enabled": true,
    "editor.bracketPairColorization.enabled": true,
    "git.autofetch": false,
    "extensions.autoUpdate": false,
    "extensions.autoCheckUpdates": false,
    "extensions.ignoreRecommendations": false,
    "extensions.closeExtensionDetailsOnViewChange": true,
    "window.experimentalControlOverlay": false,
    "telemetry.telemetryLevel": "off",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": false,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "typescript.suggest.enabled": true,
    "typescript.validate.enable": true,
    "javascript.suggest.enabled": true,
    "javascript.validate.enable": true,
    "html.suggest.html5": true,
    "css.validate": true,
    "json.validate.enable": true,
    "yaml.validate": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.python",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[yaml]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[markdown]": {
        "editor.defaultFormatter": "vscode.markdown-language-features",
        "editor.wordWrap": "on"
    },
    "files.exclude": {
        "venv/**": true,
        "**/__pycache__/**": true,
        "**/*.pyc": true,
        "node_modules/**": true,
        ".pytest_cache/**": true,
        "*.egg-info/**": true,
        ".mypy_cache/**": true,
        "htmlcov/**": true,
        "logs/**": true,
        "backups/**": true
    },
    "files.watcherExclude": {
        "venv/**": true,
        "**/__pycache__/**": true,
        "node_modules/**": true,
        ".pytest_cache/**": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true,
        "logs/**": true,
        "backups/**": true,
        "gh_temp/**": true,
        "htmlcov/**": true,
        ".mypy_cache/**": true,
        ".coverage": true,
        "*.log": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
    },
    "search.exclude": {
        "venv/**": true,
        "**/__pycache__/**": true,
        "node_modules/**": true,
        ".pytest_cache/**": true,
        ".mypy_cache/**": true,
        "htmlcov/**": true,
        "logs/**": true,
        "backups/**": true,
        "gh_temp/**": true
    }
}
