name: Frontend E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'app/**'
      - '.github/workflows/frontend-e2e.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'app/**'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up database
      run: |
        python -c "from app.database import init_db; init_db()"

    - name: Start API server
      run: |
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8007 &
        sleep 5
      env:
        DATABASE_URL: sqlite:///./test.db

    - name: Start Frontend server
      run: |
        python frontend_server.py &
        sleep 3
      env:
        FRONTEND_PORT: 8006

    - name: Verify servers are running
      run: |
        curl -f http://localhost:8007/health || exit 1
        curl -f http://localhost:8006/ || exit 1

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Playwright dependencies
      working-directory: frontend/tests
      run: |
        npm install
        npx playwright install --with-deps

    - name: Run E2E tests
      working-directory: frontend/tests
      run: npx playwright test
      env:
        CI: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: frontend/tests/playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: frontend/tests/test-results/
        retention-days: 30
