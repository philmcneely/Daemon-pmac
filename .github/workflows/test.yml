name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    b    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txthes: [ main, develop ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Create test database
      run: |
        mkdir -p data
        touch daemon.db

    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-lint-${{ hashFiles('**/requirements.txt') }}

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run Black (code formatting check)
      run: black --check --diff app/ tests/

    - name: Run isort (import sorting check)
      run: isort --check-only --diff app/ tests/

    - name: Run flake8 (linting)
      run: flake8 app/ tests/ --max-line-length=88 --extend-ignore=E203,W503

    - name: Run mypy (type checking)
      run: mypy app/ --ignore-missing-imports --no-strict-optional

    - name: Run bandit (security linting)
      run: bandit -r app/ -ll

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run safety (dependency vulnerability check)
      run: safety check

    - name: Run pip-audit (dependency audit)
      run: pip-audit
